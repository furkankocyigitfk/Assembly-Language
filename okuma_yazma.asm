myss SEGMENT PARA STACK 'STACK'
	DW 32 DUP(?)
myss ENDS

myds SEGMENT PARA 'DATA'
CR	EQU	13
LF	EQU	10
MSG1 DB 'Ilk sayiyi veriniz: ',0
MSG2 DB CR, LF, 'Ikinci sayiyi veriniz: ',0
HATA DB CR, LF, 'HATA ',0
SAYI1 DW ?
SAYI2 DW ?
TOPLAM DW ?
myds ENDS

mycs SEGMENT PARA 'CODE'
	ASSUME CS:mycs,SS:myss,DS:myds
	
	ANA PROC FAR
		PUSH DS
		XOR AX,AX
		PUSH AX
		MOV AX,myds
		MOV DS,AX
		
		MOV AX,OFFSET MSG1
		CALL PUT_STR
		CALL GETN
		MOV SAYI1,AX
		MOV AX,OFFSET MSG2
		CALL PUT_STR
		CALL GETN
		MOV SAYI2,AX
		MOV AX,SAYI1
		ADD AX,SAYI2
		CALL PUTN
		RETF
	ANA ENDP
	
	GETC PROC NEAR
		MOV AH,1H
		INT 21H
		RET
	GETC ENDP
	
	PUTC PROC NEAR
		PUSH AX
		PUSH DX
		MOV DL,AL
		MOV AH,2
		INT 21H
		POP DX
		POP AX
		RET
	PUTC ENDP
	
	GETN PROC NEAR
		PUSH BX
		PUSH CX
		PUSH DX
		
	GETN_START:
		MOV DX,1
		XOR BX,BX
		XOR CX,CX
	
	NEW:
		CALL GETC
		CMP AL,CR
		JE FIN_READ
		CMP AL, '-'
		JNE CTRL_NUM
	
	NEGATIVE:
		MOV DX,1
		JMP NEW
	
	CTRL_NUM:
		CMP AL, '0'
		JB error
		CMP AL, '9'
		JA error
		SUB AL,'0'
		MOV BL,AL
		MOV AX,10
		PUSH DX
		MUL CX
		POP DX
		MOV CX,AX
		ADD CX,BX
		JMP NEW
	
	ERROR:
		MOV AX,OFFSET HATA
		CALL PUT_STR
		JMP GETN_START
	
	FIN_READ:
		MOV AX,CX
		CMP DX,1
		JE FIN_GETN
	
	FIN_GETN:
		POP DX
		POP CX
		POP DX
		RET
	GETN ENDP

	
	PUTN PROC NEAR
		PUSH CX
		PUSH DX
		XOR DX,DX
		PUSH DX
		MOV CX,10
		CMP AX,0
		JGE CALC_DIGITS
		NEG AX
		PUSH AX
		MOV AL,'-'
		CALL PUTC
		POP AX
		
	CALC_DIGITS:
		DIV CX
		ADD DX,'0'
		PUSH DX
		XOR DX,DX
		CMP AX,0
		JNE CALC_DIGITS
		
	DISP_LOOP:
		POP AX
		CMP AX,0
		JE END_DISP_LOOP
		CALL PUTC
		JMP DISP_LOOP
		
	END_DISP_LOOP:
		POP DX
		POP CX
		RET 
	PUTN ENDP
	
	PUT_STR PROC NEAR
		PUSH BX
		MOV BX,AX
		MOV AL,BYTE PTR[BX]
	
	PUT_LOOP:
		CMP AL,0
		JE PUT_FIN
		CALL PUTC
		INC BX
		MOV AL,BYTE PTR[BX]
		JMP PUT_LOOP
	
	PUT_FIN:
		POP BX
		RET
	PUT_STR ENDP
mycs ENDS
	END ANA